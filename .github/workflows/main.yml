name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          # Add your test commands here
          echo "Testing is skipped for this simple app"

  deploy:
    name: Deploy to AWS EC2
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy Flask App to EC2
        env:
          EC2_KEY: ${{ secrets.EC2_KEY }}
          EC2_USER: ubuntu
          EC2_IP: ${{ secrets.EC2_IP }}
        run: |
          # Transfer application files to the EC2 instance
          scp -i $EC2_KEY app.py requirements.txt $EC2_USER@$EC2_IP:/home/ubuntu/
          ssh -i $EC2_KEY $EC2_USER@$EC2_IP << EOF
            # Update EC2 instance and install dependencies
            sudo apt update
            sudo apt install -y python3-pip python3-venv
            cd /home/ubuntu/
            
            # Create a virtual environment and install requirements
            python3 -m venv venv
            source venv/bin/activate
            pip install -r requirements.txt
            
            # Start Gunicorn server for the Flask app
            pkill gunicorn || true  # Stop any running instances of Gunicorn
            gunicorn --bind 0.0.0.0:5000 app:app --daemon
          EOF
